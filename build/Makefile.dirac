##
# $Id: Makefile 40 2012-08-21 20:43:52Z asarje $
#
# Project: HipGISAXS
#
# File: Makefile
# Created: June 5, 2012
# Modified: Jul 11, 2012
#
# Author: Abhinav Sarje <asarje@lbl.gov>
##

## base directories
BOOST_DIR = $(HOME)/local/boost_1_49_0#/usr/local/boost_1_49_0
MPI_DIR = #/usr/local/openmpi-1.6
CUDA_DIR = #/usr/local/cuda
HDF5_DIR = $(HOME)/local/hdf5-1.8.8-gnu/parallel#/usr/local/hdf5-1.8.9
Z_DIR = $(ZLIB_DIR)#/usr/local/zlib-1.2.7
SZ_DIR = $(SZIP_DIR)#/usr/local/szip-2.1
TIFF_DIR = /global/homes/a/asarje/local/tiff-4.0.2#/usr/local/lib

## compilers
CXX = mpicxx
CXX_FLAGS = -std=c++0x
## gnu c++ compilers >= 4.3 support -std=c++0x [least requirement for hipgisaxs]
## gnu c++ compilers >= 4.7 also support -std=c++11
H5CC = h5pcc
NVCC = nvcc

## boost
BOOST_INCL = -I$(BOOST_DIR)/include
BOOST_LIBS = -Wl,-rpath -Wl,$(BOOST_DIR)/lib
BOOST_LIBS += -lboost_system -lboost_filesystem

## parallel hdf5
HDF5_INCL = -I$(SZ_DIR)/include -I$(Z_DIR)/include -I $(HDF5_DIR)/include
HDF5_LIBS = -L $(SZ_DIR)/lib -L$(Z_DIR)/lib -L$(HDF5_DIR)/lib
HDF5_LIBS += -lhdf5 -lz -lsz -lm
HDF5_FLAGS = -Wl,-rpath -Wl,$(HDF5_DIR)/lib -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_POSIX_SOURCE -D_BSD_SOURCE

## mpi (openmpi)
MPI_INCL = #-I $(MPI_DIR)/include
MPI_LIBS = #-L $(MPI_DIR)/lib
MPI_LIBS += -lmpi_cxx -lmpi

## cuda
CUDA_INCL = $(CUDA_INCLUDE)#-I $(CUDA_DIR)/include -I.
CUDA_LIBS = $(CUDA_LIB64)#-L $(CUDA_DIR)/lib64
CUDA_LIBS += -lcudart -lcufft
NVCC_FLAGS = -Xcompiler -fPIC -Xcompiler -fopenmp -gencode arch=compute_20,code=sm_20 -gencode arch=compute_30,code=sm_30 --ptxas-options="-v"
NVLIB_FLAGS = -Xlinker -lgomp

## libtiff
TIFF_INCL = -I $(TIFF_DIR)/include
TIFF_LIBS = -L$(TIFF_DIR)/lib
TIFF_LIBS += -ltiff

## miscellaneous
MISC_FLAGS = -DGPUR #-DKERNEL2 #-DFINDBLOCK

## choose optimization levels, debug flags, gprof flag, etc
OPT_FLAGS = -g -DDEBUG #-v #-pg
#OPT_FLAGS = -O3 -DNDEBUG #-v

## choose single or double precision here
PREC_FLAG =			# leave empty for single precision
#PREC_FLAG = -DDOUBLEP	# define this for double precision


## all includes
ALL_INCL = $(MPI_INCL) $(CUDA_INCL) $(BOOST_INCL) $(HDF5_INCL) $(TIFF_INCL)

## all libraries
ALL_LIBS = $(BOOST_LIBS) $(CUDA_LIBS) $(NVLIB_FLAGS) $(MPI_LIBS) $(HDF5_LIBS) $(TIFF_LIBS)


BINARY = hipgisaxs

OBJECTS = utilities.o compute_params.o hig_input.o image.o inst_detector.o \
		  inst_scattering.o layer.o qgrid.o read_oo_input.o sf.o ffcu.o ff_ana.o ff_num.o \
		  ff.o shape.o structure.o object2hdf5.o reduction.o hipgisaxs_main.o


## main binary

$(BINARY): $(OBJECTS)
	$(CXX) $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $^ -o $@ $(ALL_LIBS)

all: hipgisaxs test_read test_conv test_ff test_image

## testing binaries

test_conv.o: test_conv.cpp convolutions.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

test_conv: test_conv.o
	$(CXX) $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $< -o $@ $(ALL_LIBS)

test_read.o: test_read.cpp read_oo_input.hpp tokens.hpp hig_input.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

test_read: test_read.o read_oo_input.o hig_input.o utilities.o compute_params.o \
	inst_detector.o inst_scattering.o layer.o shape.o structure.o object2hdf5.o
	$(CXX) $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $^ -o $@ $(ALL_LIBS)

qgrid_test_create.o: qgrid_test_create.cpp qgrid.cpp qgrid.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

test_ff.o: test_ff.cpp ff_num.hpp ff_num.cpp qgrid.hpp qgrid_test_create.cpp qgrid.cpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

test_ff: test_ff.o ff_num.o qgrid.o qgrid_test_create.o object2hdf5.o structure.o shape.o \
	inst_scattering.o inst_detector.o layer.o ffcu.o reduction.o hig_input.o \
	compute_params.o read_oo_input.o
	$(CXX) $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $^ -o $@ $(ALL_LIBS)

test_image.o: test_image.cpp image.hpp colormap.hpp typedefs.hpp distributions.hpp\
	convolutions.hpp utilities.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

test_image: test_image.o image.o utilities.o
	$(CXX) $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $^ -o $@ $(ALL_LIBS)


## all supporting code

utilities.o: utilities.cpp utilities.hpp typedefs.hpp globals.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

shape.o: shape.cpp shape.hpp enums.hpp globals.hpp tokens.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

read_oo_input.o: read_oo_input.cpp read_oo_input.hpp globals.hpp \
	token_mapper.hpp tokens.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

compute_params.o: compute_params.cpp compute_params.hpp globals.hpp \
	enums.hpp tokens.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

hig_input.o: hig_input.cpp hig_input.hpp globals.hpp tokens.hpp \
	token_mapper.hpp shape.hpp layer.hpp structure.hpp inst_scattering.hpp \
	inst_detector.hpp compute_params.hpp read_oo_input.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

inst_detector.o: inst_detector.cpp inst_detector.hpp globals.hpp tokens.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

inst_scattering.o: inst_scattering.cpp inst_scattering.hpp globals.hpp \
	tokens.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

layer.o: layer.cpp layer.hpp common.hpp tokens.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

structure.o: structure.cpp structure.hpp globals.hpp enums.hpp common.hpp \
	tokens.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

qgrid.o: qgrid.cpp qgrid.hpp hig_input.hpp 
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

image.o: image.cpp image.hpp colormap.hpp distributions.hpp convolutions.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@ -fopenmp

sf.o: sf.cpp sf.hpp qgrid.hpp structure.hpp typedefs.hpp globals.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

reduction.o: reduction.cu reduction.hpp
	$(NVCC) -c $(OPT_FLAGS) $(PREC_FLAG) $(ALL_INCL) $(MISC_FLAGS) \
		$(NVCC_FLAGS) $< -o $@

ffcu.o: ff.cu ff.hpp ff_num.cpp ff_num.hpp
	$(NVCC) -c $(OPT_FLAGS) $(PREC_FLAG) $(ALL_INCL) $(MISC_FLAGS) \
		$(NVCC_FLAGS) $< -o $@

ff_num.o: ff_num.cpp ff_num.hpp ffcu.o
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

ff_ana.o: ff_ana.cpp ff_ana.hpp
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

ff.o: ff.cpp ff.hpp ff_ana.o ff_num.o
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

object2hdf5.o: object2hdf5.c object2hdf5.h
	$(H5CC) -c $(OPT_FLAGS) $(PREC_FLAG) $(ALL_INCL) $< -o $@

hipgisaxs_main.o: *.cpp *.hpp *.cu *.c *.h
	$(CXX) -c $(OPT_FLAGS) $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) hipgisaxs_main.cpp -o $@

clean:
	rm -f $(OBJECTS) $(BINARY) test_conv test_read test_ff test_image
