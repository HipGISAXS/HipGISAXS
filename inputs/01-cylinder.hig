hipGisaxsInput = {
	shape = {
		key = "s1",	 		# a unique key to identify this shape in this file
		name = "cylinder",		# shape name
	  #param = { type = "height", min = 5 },
		param = { type = "height", min = 5, max = 10, stat = "gaussian", p1 = 7.5, p2 = 1.0, nvalues = 10 },
	  #param = { type = "radius", min = 20 }
		param = { type = "radius", min = 20, max = 30, stat = "gaussian", p1 = 25, p2 = 3.0, nvalues = 10 }
	},
	layer = {
		key = "substr",	 	# special key for case of the substrate layer infinite in lower half space
		order = -1 ,	 	# special order code for the substrate layer
		refindex = { delta = 4.88E-06, beta = 7.37E-08 }
	},
  unitcell = {
    key = "u1",
    element = {
      shape:key = "s1",
      locations = [ [ 0 0 0 ] ]
  },
	structure = {
		key = "st1",
		grain = {
			unitcell:key = "u1",
			refindex = { delta = 9.4E-06, beta = 3.37E-08 }
		}
	},
	instrumentation = {
		scattering = {
#			expt = "saxs",
			expt = "gisaxs",
			alphai = { min = 0.14 },					# incidence angles
			photon = { value = 10000, unit = "ev" }		# photon energy
		},
		detector = {
			pixelsize = 0.172,	 				# pixel size of the detector
			sdd = 4128.62,						# sample to detector distance
			directbeam = [ 489.916 843.076 ]	# position of direct beam
		}
	},
	computation = {
    #saveff = "true",
    #savesf = "true",
		pathprefix = ".",					# path to output directory
		runname = "cyl",					# name for current run and folder name for outputs
		method = "dwba",					# theorical approach (see list)
		outputregion = { type = "qspace" , minpoint = [ -3 0 ], maxpoint = [ 3 3 ] },
		resolution = [ 2000 1000 ],			# number of q points per pixel
		nslices = 0							# max number of slices for slicing algorithm
	}
}
