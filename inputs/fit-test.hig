hipGisaxsInput = {
	shape = {
		key = "s1",	 		# a unique key to identify this shape in this file
		name = "cylinder",		# shape name
		originvec = [0 0 0],
		param = { type = "height", min = 1 },
		param = { type = "radius", min = 1 }
	},
	layer = {
		key = "substr",	 	# special key for case of the substrate layer infinite in lower half space
		order = -1 ,	 	# special order code for the substrate layer
		refindex = { delta = 4.88E-06, beta = 7.37E-08 }
	},
	structure = {
		key = "st1",
		grain = {
			shape:key = "s1",
			refindex = { delta = 9.4E-06, beta = 3.37E-08 }
		}
	},
	instrumentation = {
		scattering = {
			expt = "gisaxs",
			alphai = { min = 0.14 },					# incidence angles
			photon = { value = 10000, unit = "ev" }		# photon energy
		},
		detector = {
			pixelsize = 0.172,	 				# pixel size of the detector
			sdd = 4128.62,						# sample to detector distance
			directbeam = [ 489.916 843.076 ]	# position of direct beam
		}
	},
	computation = {
		pathprefix = ".",						# path to output directory
		runname = "cyl",						# name for current run and folder name for outputs
		method = "dwba",						# theorical approach (see list)
		outputregion = { type = "qspace" , minpoint = [ 0 0 ], maxpoint = [ 3 3 ] },
#		outputregion = { type = "qspace", minpoint = [ 0 0 ], maxpoint = [ 0.2 1 ] },	# data space
		resolution = [ 0.5 0.5 ],				# number of q points per pixel
		nslices = 0								# max number of slices for slicing algorithm
	},
	fitting = {
		fitparam = {										# parameter to fit
			key = "p1",										# a unique key for this parameter
			variable = "shape['s1']:param['height']:min",	# parameter definition
			range = { min = 1, max = 10, step = 1 },		# parameter value range
			init = 5										# initial value
		},
		fitparam = {
			key = "p2",
			variable = "shape['s1']:param['radius']:min",
			range = { min = 1, max = 10, step = 1 },
			init = 9
		},
		referencedata = {
			path = "/home/asarje/hipgisaxs-samples.git/outputs/01-cylinder/gisaxs_ai=0.14_rot=0_tilt=0.out",										# path to reference data.
#			path = "/home/asarje/hipgisaxs.git/src/analyzer/poly_one_ref_40_120.dat",
#			path = "/home/asarje/hipgisaxs.git/src/analyzer/poly_one_ref_30_80_-0.2-0.2-0.01.dat",
															# should include axes vectors
			fitregion = { type = "qspace", regmin = [ 0 0 ], regmax = [ 3 3 ] },	# data space
#			fitregion = { type = "qspace", regmin = [ 0 0 ], regmax = [ 0.2 1 ] },	# data space
			npoints = { parallel = 1500, perpendicular = 749 }	# number of image points to take inside
#			npoints = { parallel = 20, perpendicular = 1 }	# number of image points to take inside
															# the region. overrides simulation output
															# region defined above
		},
		algorithm = {
			algoname = "pounders",					# name of the analysis algorithm
			algoorder = 1,							# execution order
			algoparam = { type = "delta", pvalue = 10 },
			restart = "yes",					# whether to restart from initial values or resume
												# from previous run's final results
			tolerance = 1e-2					# error tolerance for convergence
		}
		# more algorithms may come here
	}
}
