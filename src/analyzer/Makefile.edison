
MPI_DIR =
#PETSC_DIR = ${PETSC_DIR}
TAO_DIR = ${HOME}/local/tao-2.2.0-intel/lib64/python2.6/site-packages/tao
HIPGISAXS_DIR = ${HOME}/gscratch2/hipgisaxs.git
HDF5_DIR = ${HOME}/local/hdf5-1.8.9-edison-intel
TIFF_DIR = ${HOME}/local/tiff-4.0.2-edison-intel
#BOOST_DIR = ${BOOST_DIR}
BOOST_DIR = ${HOME}/local/boost_1_49_0
#SZIP_DIR = ${SZIP_DIR}
NUM_BOOST_DIR = ${HOME}/local/boost_1_49_0


PREFIX = $(PWD)
INCL_DIR = $(PREFIX)
LIB_DIR = $(PREFIX)
SRC_DIR = $(PREFIX)
BIN_DIR = $(PREFIX)
OBJ_DIR = $(PREFIX)
CXX = CC
CXX_FLAGS = -std=c++11 -openmp -DUSE_MPI
CXX_FLAGS += -g
PREC_FLAG =

########EXTERNAL DEPENDENCIES###########
MPI_LDFLAGS =
MPI_LIBS =

TAO_INCL = -I $(TAO_DIR)/include
TAO_LDFLAGS = -L $(TAO_DIR)/lib
TAO_LIBS = -ltao

PETSC_INCL = -I $(PETSC_DIR)/include
PETSC_LDFLAGS = -L $(PETSC_DIR)/lib
PETSC_LIBS += -lcraypetsc_intel_real

HIPGISAXS_INCL = -I $(HIPGISAXS_DIR)/include
HIPGISAXS_LDFLAGS = -L $(HIPGISAXS_DIR)/lib
HIPGISAXS_LIBS = -lhipgisaxs

HDF5_INCL = -I $(HDF5_DIR)/include
HDF5_LDFLAGS = -L $(HDF5_DIR)/lib -L $(SZIP_DIR)/lib
HDF5_LIBS = -lhdf5 -lz -lsz

TIFF_INCL = -I $(TIFF_DIR)/include
TIFF_LDFLAGS = -L $(TIFF_DIR)/lib
TIFF_LIBS = -ltiff

BOOST_INCL = -I $(BOOST_DIR)/include -I $(NUM_BOOST_DIR)/include
BOOST_LDFLAGS = -L $(BOOST_DIR)/lib
BOOST_LIBS = -lboost_system -lboost_filesystem -lboost_timer -lboost_chrono

#ALL_INCL = $(TAO_INCL) $(PETSC_INCL) $(HIPGISAXS_INCL) $(HDF5_INCL) $(TIFF_INCL) $(BOOST_INCL)
ALL_LDFLAGS = $(MPI_LDFLAGS) $(TAO_LDFLAGS) $(GCC_LDFLAGS) $(PETSC_LDFLAGS) \
                          $(HIPGISAXS_LDFLAGS) $(HDF5_LDFLAGS) $(TIFF_LDFLAGS) $(BOOST_LDFLAGS)
ALL_LIBS = $(MPI_LIBS) $(TAO_LIBS) $(PETSC_LIBS) $(HIPGISAXS_LIBS) $(HDF5_LIBS) $(TIFF_LIBS) $(BOOST_LIBS)

#######################################

## all objs and libs                                                                                                                           
ALL_INCL= $(TAO_INCL) $(PETSC_INCL) $(HDF5_INCL) $(TIFF_INCL) $(BOOST_INCL) $(HIPGISAXS_INCL)

OBJECTS = ImageData.o analysis_algorithm.o objective_func.o hipgisaxs_ana.o objective_func_hipgisaxs.o

POUND_OBJS = hipgisaxs_fit_pounders.o
POUND_HIP_OBJS = $(POUND_OBJS) hipgisaxs_fit_pounders_main.o

F1_OBJS = objective_func_poly_one.o
F1_HIP_OBJS = $(F1_OBJS) objective_func_poly_one_main.o

PSO_OBJS = hipgisaxs_fit_pso.o hipgisaxs_fit_pso_particle.o
PSO_HIP_OBJS = $(PSO_OBJS) hipgisaxs_fit_pso_main.o

BF_OBJS = hipgisaxs_fit_bruteforce.o
BF_HIP_OBJS = $(BF_OBJS) hipgisaxs_fit_bruteforce_main.o

HIP_OBJS = hipgisaxs_fit_main.o $(POUND_OBJS) $(PSO_OBJS) $(BF_OBJS)

TEST_HIP_OBJS = hipgisaxs_fit_test.o $(POUND_OBJS) $(PSO_OBJS) $(BF_OBJS)

BINARY = analyze

all: hipgisaxs

test:
	(make $(BINARY) \
		"OBJECTS = $(OBJECTS) $(TEST_HIP_OBJS)")

hipgisaxs:
	(make $(BINARY) \
		"OBJECTS = $(OBJECTS) $(HIP_OBJS)")

pounders:
	(make $(BINARY) \
		"OBJECTS = $(OBJECTS) $(POUND_HIP_OBJS)")

f1:
	(make $(BINARY) \
		"OBJECTS = $(OBJECTS) $(F1_HIP_OBJS)")

pso:
	(make $(BINARY) \
		"OBJECTS = $(OBJECTS) $(PSO_HIP_OBJS)")

bf:
	(make $(BINARY) \
		"OBJECTS = $(OBJECTS) $(BF_HIP_OBJS)")


## c++ compilation                                                                                                                             
%.o: $(SRC_DIR)/%.cpp
	$(CXX) -c $< -o $@  $(CXX_FLAGS) $(PREC_FLAG) $(ALL_INCL) 


$(BINARY): $(OBJECTS)
	$(CXX)  $(CXX_FLAGS) -o $(BIN_DIR)/$@ $^ -Llib $(ALL_LDFLAGS) $(ALL_LIBS)

clean:
	rm -f *.o $(BINARY)
