Import('env')

gpuenv = env.Clone()
gpuenv.Tool('cuda')

for item in sorted(gpuenv.Dictionary().items()):
	print "++ '%s', value = '%s'" % item

#CUDA_INCL = -I$(CUDA_DIR)/include
#CUDA_LIBS = -L$(CUDA_DIR)/lib64 -lcudart -lcufft -lcudadevrt #-lnvToolsExt
cuda_flags = ['-Xcompiler', '-fPIC', '-Xcompiler', '-fopenmp', '-m64', '-dc']
#cuda_flags += -gencode arch=compute_20,code=sm_20
#cuda_flags += -gencode arch=compute_20,code=compute_20
#cuda_flags += -gencode arch=compute_20,code=sm_21
#cuda_flags += -gencode arch=compute_30,code=sm_30
cuda_flags += ['-gencode', 'arch=compute_35,code=sm_35']
#NVCC_FLAGS += -Xptxas -v -Xcompiler -v -Xlinker -v
cuda_flags += ['--ptxas-options="-v"']
cuda_flags += ['-use_fast_math', '-ftz=true', '-prec-div=false']
#cuda_flags += -G -lineinfo #-DFINDBLOCK #-DAXIS_ROT
#NVLIB_FLAGS = -Xlinker -lgomp
#NVLINK_FLAGS = -arch=sm_35 -dlink $(CUDA_LIBS) $(NVLIB_FLAGS)

gpuenv.Append(NVCCFLAGS = cuda_flags)

objs = [ ]
objs += gpuenv.Object(Glob('*.cu'))

Return('objs')
