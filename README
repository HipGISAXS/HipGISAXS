HipGISAXS Version 0.01-alpha
============================

NOTE: The included tar ball contains an already compiled binary for Carver/Dirac system in the directory "bin".


** Pre-requisites:
   --------------
This software uses third-party libraries, and they need to be installed and available in order to compile and run this code.
Use software already available on your system. Alternatively, download and install it yourself.
NOTE: The supplied compiled binary is dynamically linked with these libraries, some of them installed in /global/homes/a/asarje/local.
The following are the dependencies of this software:
1. GNU C/C++ compilers, version >= 4.3 and < 4.6.
2. Nvidia CUDA version 4.x.
   CUDA can be obtained from: http://developer.nvidia.com/cuda/cuda-downloads
3. GNU compiled OpenMPI version > 1.4.4.
   OpenMPI can be obtained from: http://www.open-mpi.org/software
4. Boost and numeric extension to Boost GIL.
   Boost can be obtained from: http://www.boost.org
   Numeric extension to Boost GIL can be obtained from: http://sourceforge.net/adobe/genimglib/wiki/Downloads
   NOTE: These are also installed at /global/homes/a/asarje/local/boost_1_49_0 on Carver/Dirac.
5. Parallel HDF5 library.
   HDF5 can be obtained from: http://www.hdfgroup.org/downloads
   NOTE: It is also installed at /global/homes/a/asarje/local/hdf5-1.8.8-gnu/parallel on Carver/Dirac.
   NOTE: HDF5 depends on zlib and szip.
   zlib can be obtained from: http://www.zlib.net
   szip can be obtained from: http://www.hdfgroup.org/doc_resource/SZIP
6. Tiff Library (libtiff).
   Tiff library can be obtained from: http://www.libtiff.org
   NOTE: It is also installed at /global/homes/a/asarje/local/tiff-4.0.2 on Carver/Dirac.


** HipGISAXS directory layout:
   --------------------------
   hipgisaxs
       |- Makefile: This is the main makefile to build HipGISAXS.
	   |- README  : This file.
       |- bin     : This contains HipGISAXS binaries generated by compilation.
       |- build   : A few Makefiles for different systems are provided in this.
       |- data    : This provides some sample input shape definition files in HDF5 format.
       |- doc     : This contains detailed documentation of HipGISAXS. [TODO]
       |- inputs  : This gives some sample input files to HipGISAXS program in HiG format.
       |- man     : This has the man pages.
       |- obj     : All the object files generated during build are stored here.
       |- src     : This is the main source directory containing the whole code.


** To re-build:
   -----------
If you want to re-build the binaries, use "make" as in the following cases:

A. On Carver/Dirac at NERSC:
   ------------------------
1. Some makefiles for different systems are included in the directory "build".
   Replace the current "Makefile" with the one for Dirac (and name it as "Makefile"):
    $ cp build/Makefile.dirac Makefile
2. Unload the default PGI modules:
    $ module unload pgi openmpi
3. Load the required modules:
    $ module load openmpi-gnu gcc/4.5.2 cuda/4.2
    $ module load szip zlib
    $ module load hdf5-parallel/1.8.3-gnu
4. The Boost module available on Carver does not contain the GIL numeric extension.
   Please install and use your own copy, or use the one at /global/homes/a/asarje/local/boost_1_49_0.
5. Edit Makefile to specify the correct paths ("base directories" section) to the various libraries.
   Example:
	$ cat Makefile
    ...
    ## base directories
	BOOST_DIR = /global/homes/a/asarje/local/boost_1_49_0
	MPI_DIR = 
	CUDA_DIR = /usr/common/usg/cuda/4.2
	HDF5_DIR = /global/homes/a/asarje/local/hdf5-1.8.8-gnu/parallel
    TIFF_DIR = /global/homes/a/asarje/local/tiff-4.0.2
	Z_DIR = $(ZLIB_DIR)     # an environment variable set by loading zlib module
    SZ_DIR = $(SZIP_DIR)    # an environment variable set by loading szip module
	...
6. Build the code from within the code directory:
    $ make clean
    $ make
   This will generate the binary in directory "bin".
   All the generated object files are in the directory "obj".

B. On a generic Linux system:
   -------------------------
1. Make sure all above prerequisites are available.
2. Make sure all system environment variables are set accordingly to include the prerequisites.
3. Set all paths correctly in the sample Makefile, and edit as needed (as above).
4. Build the code from within the code directory:
    $ make clean
    $ make


** To run:
   -----------------------------
   
A. Interactively on Dirac:
   ----------------------
1. Unload the default PGI modules:
    $ module unload pgi openmpi
2. Load the required modules:
    $ module load openmpi-gnu gcc/4.5.2 cuda/4.2
    $ module load szip zlib
    $ module load hdf5-parallel/1.8.3-gnu
3. Request a GPU node:
    $ qsub -I -V -q dirac_int -l nodes=1:ppn=8:fermi
4. Make sure loaded modules are correct.
   By default, PGI version of openMPI might be loaded, and needs to be unloaded:
    $ module unload openmpi
5. Move to code directory:
    $ cd $PBS_O_WORKDIR
6. Execute on a single node:
    Usage: ./bin/hipgisaxs <input-file-in-HiG>
   Example:
	$ ./bin/hipgisaxs inputs/test.27.hig
7. For more details on running interactive jobs on Dirac, please refer to:
    http://www.nersc.gov/users/computational-systems/dirac/running-jobs/interactive

B. Submit batch job for multiple GPU nodes:
   ---------------------------------------
1. Create a job script. Example:
     $ cat script.pbs
     #PBS -q dirac_special
     #PBS -l nodes=12:ppn=1:fermi
     #PBS -l walltime=03:00:00
     #PBS -A gpgpu
     #PBS -N opv_new1.12
     #PBS -e opv_new1.12.$PBS_JOBID.err
     #PBS -o opv_new1.12.$PBS_JOBID.out
     #PBS -V
     cd $PBS_O_WORKDIR
     module unload pgi openmpi
     module load openmpi-gnu/1.4.5 gcc/4.5.4 cuda/4.2
     module load szip zlib
     module load hdf5-parallel/1.8.3-gnu
     export PATH=/global/homes/a/asarje/local/tiff-4.0.2/bin:$PATH
     export LD_LIBRARY_PATH=/global/homes/a/asarje/local/tiff-4.0.2/lib:$LD_LIBRARY_PATH
     mpirun -np 4 ./bin/hipgisaxs inputs/test.27.hig
2. In the submission script:
   Make sure the modules are loaded correctly (see example above.)
   For the execution command, use:
     mpitun -np <nodes> ./bin/hipgisaxs <input-file-in-HiG>
   where, 'nodes' is number of GPU nodes.
3. Submit the script:
    $ qsub script.pbs
4. For detailed information on writing and submitting job scripts for Dirac, please refer to:
    http://www.nersc.gov/users/computational-systems/dirac/running-jobs/batch


** Inputs:
   ------
The HipGISAXS binary takes as input a file in HiG format.
Please refer to detailed HipGISAXS documentation for details of the HiG format.
A few sample input files are located in the directory "inputs", with extensions ".hig".
Update the input file as needed.
The main components in the input file to update are the following:
1. Shape name defines the input filename containing triangulated shape data.
   It should point to the correct location of the file (relative path):
	   ...
	   shape = {
		   ...
		   name = "data/Shape_27.hd5"
	   } ...
   This file needs to be in HDF5 format.
   Some sample shape files are provided in the directory "data", with extensions ".hd5".
2. Output locatation needs to be defined as pathprefix and runname in the computation object:
      ...
	  computation = {
		  ...
		  pathprefix = ".",
		  runname = "27",
		  ...
	  } ...
   The pathprefix is a relative path to a directory.
   The runname is appended with a timestamp and a directory by this resulting name
    is created in the directory specified by pathprefix.
   All generated output files are stored in this directory.
3. Resolution alters the final image resolution, and also affects the run time:
      ...
	  computation = {
		  ...
		  resolution = [ 0.5 0.5 ],
		  ...
	  } ...
   Lower resolutions execute faster, and higher slower.
   Modify it as needed.

